# 
msgid ""
msgstr ""
"Project-Id-Version: Juju docs - Sphinx Edition 0.1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2013-12-05 00:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../getting-started.rst:2
msgid "Introduction"
msgstr ""

#: ../../getting-started.rst:4
msgid ""
"This tutorial will show you how to get started with Juju, including "
"installing, configuring and bootstrapping a new Juju environment. Before you"
" start you will need:"
msgstr ""

#: ../../getting-started.rst:9
msgid "An Ubuntu, OSX or Windows machine to install the client on."
msgstr ""

#: ../../getting-started.rst:10
msgid ""
"An environment which can provide a new server with an Ubuntu cloud operating"
" system image on-demand. This includes services such as Amazon EC2, HP "
"Cloud, an OpenStack installation, or your local machine"
msgstr ""

#: ../../getting-started.rst:13
msgid ""
"An SSH key-pair. If you have not already set one up, you need to generate an"
" appropriate keypair. On Linux and Mac OSX: ``ssh-keygen -t rsa -b 2048`` On"
" Windows: See the `Windows instructions for SSH and PuTTY`_"
msgstr ""

#: ../../getting-started.rst:22
msgid "Installation"
msgstr ""

#: ../../getting-started.rst:23
msgid ""
"To install Juju, you simply need to grab the latest juju-core package from "
"the PPA:"
msgstr ""

#: ../../getting-started.rst:26
msgid "**Ubuntu :**"
msgstr ""

#: ../../getting-started.rst:33
msgid "**Mac OSX :**"
msgstr ""

#: ../../getting-started.rst:35
msgid "Juju is in `Homebrew`_, to install do:"
msgstr ""

#: ../../getting-started.rst:41
msgid "**Windows :**"
msgstr ""

#: ../../getting-started.rst:43
msgid "Download and run the `Juju windows installer from here.`_"
msgstr ""

#: ../../getting-started.rst:48
msgid "Configuring"
msgstr ""

#: ../../getting-started.rst:50
msgid ""
"Now the Juju software is installed, it needs to be configured to use your "
"particular cloud provider. This is done by generating and editing a file, "
"``environments.yaml``, which will live in your ``~/.juju/`` directory on "
"Linux and OSX, ``%LOCALAPPDATA%/Juju`` on Windows. You can generate the "
"environments file manually, but Juju also includes a boilerplate "
"configuration option that will flesh out most of the file for you and "
"minimise the amount of work (and potential errors)."
msgstr ""

#: ../../getting-started.rst:58
msgid "To generate an initial config file, you simply need to run:"
msgstr ""

#: ../../getting-started.rst:66
msgid ""
"This command will cause a file to be written to your ~/.juju directory if an"
" environments.yaml file does not already exist. It will also create the "
"~./juju directory if that does not exist."
msgstr ""

#: ../../getting-started.rst:70
msgid ""
"This file will contain sample profiles for different types of cloud "
"services, but you will need to edit the files to provide specific "
"information for your cloud provider. Sections are created for Amazon (AWS) "
"services, HPCloud and a generic OpenStack instance (and for the local "
"provider if running on Linux). For more specifics on what needs to be "
"changed, see the relevant sections below."
msgstr ""

#: ../../getting-started.rst:78
msgid "`Configuring for Amazon AWS`_"
msgstr ""

#: ../../getting-started.rst:79
msgid "`Configuring for Windows Azure`_"
msgstr ""

#: ../../getting-started.rst:80
msgid "`Configuring for HP Cloud`_"
msgstr ""

#: ../../getting-started.rst:81
msgid "`Configuring for OpenStack`_"
msgstr ""

#: ../../getting-started.rst:82
msgid "`Configuring for MAAS`_"
msgstr ""

#: ../../getting-started.rst:83
msgid "`Configuring for LXC local provider (Linux)`_"
msgstr ""

#: ../../getting-started.rst:89
msgid "Testing your setup"
msgstr ""

#: ../../getting-started.rst:91
msgid ""
"Once you have installed and configured Juju, it is probably a good idea to "
"take it for a bit of a test drive and check that everything is working as "
"expected. Because Juju makes it really easy to deploy services, this is "
"actually quick and straightforward."
msgstr ""

#: ../../getting-started.rst:96
msgid ""
"The first thing to do is set up a bootstrap environment. This is an instance"
" in the cloud that Juju will use to deploy and control other services with. "
"It will be created according to the configuration you have provided, and "
"your SSH key will automatically be uploaded so that Juju can communicate "
"securely with the bootstrap instance."
msgstr ""

#: ../../getting-started.rst:109
msgid ""
"If you have multiple environments configured, you can choose which one to "
"address with a particular command by adding the ``-e`` switch followed by "
"the environment name, E.g. ``-e hpcloud``."
msgstr ""

#: ../../getting-started.rst:113
msgid ""
"You may have to wait a few moments for this command to return, as it needs "
"to perform various tasks and contact your cloud provider."
msgstr ""

#: ../../getting-started.rst:116
msgid ""
"Assuming it returns successfully (otherwise see `common error messages and "
"what to do about them`_), we can now deploy some services and explore the "
"basic operations of Juju."
msgstr ""

#: ../../getting-started.rst:120
msgid "To start with, we will deploy Wordpress, by running this command:"
msgstr ""

#: ../../getting-started.rst:128
msgid ""
"Now juju will fetch the Wordpress charm and use it, through the bootstrap "
"instance to request and deploy whatever resources it needs to set up this "
"service."
msgstr ""

#: ../../getting-started.rst:132
msgid ""
"Wordpress needs a database though, so we will also deploy one of those:"
msgstr ""

#: ../../getting-started.rst:141
msgid ""
"Once again, juju will do whatever is necessary to deploy this service for "
"you, and it may take some time for the command to return."
msgstr ""

#: ../../getting-started.rst:144
msgid ""
"If you want to get more information on what is actually happening, or to "
"help resolve problems, you can add the -v switch to the juju command to get "
"verbose output."
msgstr ""

#: ../../getting-started.rst:148
msgid ""
"Although we have deployed Wordpress and a MySQL database, they are not "
"linked together in any way yet. To do this we should run:"
msgstr ""

#: ../../getting-started.rst:157
msgid ""
"This command uses information provided by the relevant charms to associate "
"these services with each other in whatever way makes sense. There is much "
"more to be said about linking services together which `is covered in the "
"juju command documentation`_, but for the moment, we just need to know that "
"it will link these services together."
msgstr ""

#: ../../getting-started.rst:163
msgid ""
"In order to make our Wordpress public, we now need to expose this service:"
msgstr ""

#: ../../getting-started.rst:172
msgid ""
"This service will now be configured to respond to web requests, so visitors "
"can see it. But where exactly is it? If we run the juju status command, we "
"will be able to see what services are running, and where they are located."
msgstr ""

#: ../../getting-started.rst:183
msgid "The output from this command should look something like this:"
msgstr ""

#: ../../getting-started.rst:237
msgid ""
"There is quite a lot of information here. the first section, titled "
"machines: , details all the instances which are currently running. For each "
"you will see the version of Juju they are running, their hostname, instance "
"id and the series or version of Ubuntu they are running."
msgstr ""

#: ../../getting-started.rst:243
msgid ""
"After that, the sections list the services which are currently deployed. The"
" information here differs slightly according to the service and how it is "
"configured. It will however, always list the charm that was used to deploy "
"the service, whether it is exposed or not, its address and whatever "
"relationships exist."
msgstr ""

#: ../../getting-started.rst:249
msgid ""
"From this status readout, we can see that wordpress is exposed and ready. If"
" we simply copy the address into a web browser, we should be able to see it "
"running"
msgstr ""

#: ../../getting-started.rst:255
msgid "Congratulations, you have just deployed a service with Juju!"
msgstr ""

#: ../../getting-started.rst:257
msgid ""
"Now you are ready to deploy whatever service you really want from the 100s "
"available at the `Juju Charm Store.`_"
msgstr ""

#: ../../getting-started.rst:260
msgid ""
"To remove all current deployments and clear up everything in your cloud, you"
" can run the command:"
msgstr ""

#: ../../getting-started.rst:269
msgid "This will remove everything, including the bootstrap node."
msgstr ""

#: ../../getting-started.rst:271
msgid ""
"To learn more about charms, including configuring options and managing "
"running systems, you should continue to `read the charm documentation.`_"
msgstr ""
